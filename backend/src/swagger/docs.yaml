openapi: 3.0.3
info:
  title: Credit Jambo Admin API
  version: 1.1.0
  description: |
    Admin API for managing users, devices, notifications, and transactions.
servers:
  - url: "http://localhost:5000/api"
    description: Local Admin Server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Something went wrong
    AdminLoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: admin@example.com
        password:
          type: string
          example: Admin123!
    AdminLoginResponse:
      type: object
      properties:
        message:
          type: string
          example: Admin login successful
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        admin:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Admin User
            email:
              type: string
              example: admin@example.com
    LastTransaction:
      type: object
      nullable: true
      properties:
        id:
          type: integer
          example: 45
        type:
          type: string
          enum:
            - deposit
            - withdraw
        amount:
          type: number
          example: 250.75
        createdAt:
          type: string
          format: date-time
          example: 2025-10-25T15:30:00.000Z
    UserItem:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: john@example.com
        deviceId:
          type: string
          nullable: true
          example: DEVICE-12345
        verified:
          type: boolean
          example: true
        balance:
          type: number
          example: 1200.5
        lastTransaction:
          $ref: "#/components/schemas/LastTransaction"
    NotificationItem:
      type: object
      properties:
        id:
          type: integer
          example: 101
        type:
          type: string
          example: account
        message:
          type: string
          example: User account verified successfully
        user_name:
          type: string
          example: Jane Doe
        email:
          type: string
          example: jane@example.com
        created_at:
          type: string
          format: date-time
          example: 2025-10-25T12:45:00.000Z
    AdminTransactionItem:
      type: object
      properties:
        id:
          type: integer
          example: 301
        user_id:
          type: integer
          example: 3
        user_name:
          type: string
          example: John Doe
        account_number:
          type: string
          example: AC123456
        type:
          type: string
          enum:
            - deposit
            - withdraw
        amount:
          type: number
          example: 250
        old_balance:
          type: number
          example: 1000
        new_balance:
          type: number
          example: 1250
        device_id:
          type: string
          example: DEVICE-12345
        created_at:
          type: string
          format: date-time
          example: 2025-10-25T10:15:00.000Z
tags:
  - name: Admin Auth
    description: Authentication endpoints for admin users
  - name: Users
    description: Manage users and device verification
  - name: Notifications
    description: Admin view notifications
  - name: Transactions
    description: Admin view all user transactions
  - name: System
    description: General or health-check endpoints
paths:
  /:
    get:
      tags:
        - System
      summary: Welcome message or API health check
      responses:
        "200":
          description: Welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Welcome to Credit Jambo Admin API
  /admin/login:
    post:
      tags:
        - Admin Auth
      summary: Authenticate admin and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminLoginRequest"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminLoginResponse"
        "400":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users:
    get:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Get all users with balances and last transaction
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserItem"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/unverified:
    get:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Get users not yet verified by admin
      responses:
        "200":
          description: Unverified users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserItem"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/users/{userId}/verify":
    patch:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Verify and approve a user's device
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Device verified successfully
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/users/{userId}/unverify":
    patch:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Revoke user's verified device access
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Device unverified successfully
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/users/{userId}":
    delete:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Delete a user account
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /notifications:
    get:
      security:
        - bearerAuth: []
      tags:
        - Notifications
      summary: View all notifications
      responses:
        "200":
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      $ref: "#/components/schemas/NotificationItem"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /transactions:
    get:
      security:
        - bearerAuth: []
      tags:
        - Transactions
      summary: Get all user transactions or filter by userId
      parameters:
        - in: query
          name: userId
          schema:
            type: integer
          required: false
          description: Filter transactions by user ID
      responses:
        "200":
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: "#/components/schemas/AdminTransactionItem"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
